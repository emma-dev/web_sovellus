{"version":3,"sources":["components/Dialogs/Dialogs.module.css","assets/images/Viper.png","components/Dialogs/DialogItem/DialogItem.jsx","assets/images/Reyna.png","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","src","userPhoto","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,0B,2GCD1O,MAA0B,kC,OCqB1BC,EAhBI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACI,qBAAKC,IAAKC,IACV,eAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,cAAuCR,EAAMS,KAA7C,WCTG,MAA0B,kCCqB1BC,EAjBC,SAACV,GAEb,OAGI,sBAAKC,UAAWC,IAAQC,OAAxB,UACA,qBAAKE,IAAKC,IAETN,EAAMW,Y,0CCATC,EAAcC,YAAiB,IA+C/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UAEI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,yBAErG,8BAAK,kDAQFC,EA/CC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBD,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAG3CwB,EAAmBN,EAAMO,SACxBH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE1B,OAE7BkB,EAAMS,eAM3B,OAAInC,EAAMoC,OAEN,sBAAKnC,UAAWC,IAAQ2B,QAAxB,UACI,qBAAK5B,UAAWC,IAAQmC,aAAxB,SACKT,IAEL,sBAAK3B,UAAWC,IAAQ+B,SAAxB,UACI,8BAAMD,IACN,cAAClB,EAAD,CAAsBG,SAZd,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOH,yBAGJ,cAAC,IAAD,CAAU5B,GAAG,YCV3BiC,sBACXC,aAfkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAO,CACHH,YAAa,SAACJ,GACVO,EAASC,YAAmBR,SAOpCS,IAFWJ,CAGbf","file":"static/js/4.88bdf0bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rNXm\",\"dialogsItems\":\"Dialogs_dialogsItems__OYeVS\",\"active\":\"Dialogs_active__2QUkT\",\"messages\":\"Dialogs_messages__2Mk9w\",\"message\":\"Dialogs_message__3FJUw\",\"textarea\":\"Dialogs_textarea__20oK2\",\"button\":\"Dialogs_button__2Ldyx\"};","export default __webpack_public_path__ + \"static/media/Viper.affd2824.png\";","import { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\nimport userPhoto from '../../../assets/images/Viper.png';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={userPhoto}></img>\r\n            <NavLink to={\"/dialogs/\" + props.id}> {props.name} </NavLink>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogItem;","export default __webpack_public_path__ + \"static/media/Reyna.e21cdeb0.png\";","\r\nimport classes from './../Dialogs.module.css';\r\nimport userPhoto from '../../../assets/images/Reyna.png';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n\r\n        \r\n        <div className={classes.dialog}> \r\n        <img src={userPhoto}></img>\r\n        \r\n        {props.message}</div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Message;","\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport classes from './Dialogs.module.css';\r\nimport React from 'react';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n\r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to='/login' />;\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux  onSubmit={addNewMessage} /> \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst AddMessageForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n        \r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}