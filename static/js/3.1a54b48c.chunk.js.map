{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","assets/images/Sage.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","userPhoto","message","like","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","reverse","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","Preloader","block","descriptionBlock","photos","large","type","target","files","length","text","Profile","styles","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","prevProps","prevState","snapchot","refresProfile","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1a54b48c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1CcEy\",\"postsBlock\":\"MyPosts_postsBlock__1G2pU\",\"posts\":\"MyPosts_posts__1Kdoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1MKIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1Jkr_\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__dnr5K\",\"text\":\"ProfileInfo_text__s1t-7\",\"block\":\"ProfileInfo_block__3GZGp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__6Pw3E\",\"item\":\"Profile_item__31Lx3\"};","export default __webpack_public_path__ + \"static/media/Sage.149e3df1.png\";","import classes from './Post.module.css';\r\nimport userPhoto from '../../../../assets/images/Sage.png';\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={classes.item}>\r\n        <img src={userPhoto}></img>{props.message}\r\n        <div><span>like</span>{props.like}</div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Post;","import classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { PureComponent } from 'react';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = \r\n    [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} like={p.like} />);\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={classes.postsBlock}>\r\n                <h2>My posts</h2>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n})\r\n\r\n\r\nconst AddNewPostForm = (props) =>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n        <div>\r\n            <Field component={Textarea} placeholder={\"Post Message\"} name=\"newPostText\" validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"}) (AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","\r\nimport React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n   \r\n\r\n    state = {\r\n        editMode: false,\r\n        status: !this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n        if(prevProps.status !== this.props.status){\r\n        this.setState({\r\n            status: this.props.status\r\n        });\r\n    }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input  onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.props.status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProfileStatus;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect(() => {\r\n    setStatus(props.status);\r\n}, [props.status]);\r\n\r\nconst activateEditMode = () => {\r\n    setEditMode(true);\r\n}\r\nconst   deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n}\r\nconst    onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}  autoFocus={true} \r\n                    onBlur={deactivateEditMode} value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileStatusWithHooks;","\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/Killjoy.png';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\nconst onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length){\r\n       savePhoto(e.target.files[0]);\r\n    }\r\n}\r\n\r\n    return (\r\n        <div className={classes.block}>\r\n         \r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} />\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                <div className={classes.text}><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/></div>\r\n                </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.content}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from '../../redux/profile-reducer';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refresProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        \r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState, snapchot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refresProfile();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresProfile();\r\n}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}/>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}